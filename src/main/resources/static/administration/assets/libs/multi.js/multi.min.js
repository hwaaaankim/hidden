/*! multi.js 17-02-2021 */
var multi = (function () {
    var enforceLimit = function (select, settings) {
        var limit = settings.limit;

        if (limit > -1) {
            var selectedCount = 0;

            for (var i = 0; i < select.options.length; i++) {
                if (select.options[i].selected) {
                    selectedCount++;
                }
            }

            if (selectedCount === limit) {
                this.disabled_limit = true;

                if (typeof settings.limit_reached === "function") {
                    settings.limit_reached();
                }

                for (i = 0; i < select.options.length; i++) {
                    var option = select.options[i];
                    if (!option.selected) {
                        option.setAttribute("disabled", true);
                    }
                }
            } else if (this.disabled_limit) {
                for (i = 0; i < select.options.length; i++) {
                    var option = select.options[i];
                    if (option.getAttribute("data-origin-disabled") === "false") {
                        option.removeAttribute("disabled");
                    }
                }

                this.disabled_limit = false;
            }
        }
    };

    var toggleOption = function (select, event, settings) {
        var index = event.target.getAttribute("multi-index");
        var option = select.options[index];

        if (option.disabled) return;

        option.selected = !option.selected;

        enforceLimit(select, settings);

        var evt = document.createEvent("HTMLEvents");
        evt.initEvent("change", false, true);
        select.dispatchEvent(evt);
    };

    var render = function (select, settings) {
        var wrapper = select.wrapper;
        wrapper.selected.innerHTML = "";
        wrapper.non_selected.innerHTML = "";

        if (settings.non_selected_header && settings.selected_header) {
            var nonHeader = document.createElement("div");
            var selHeader = document.createElement("div");

            nonHeader.className = "header";
            selHeader.className = "header";

            nonHeader.innerText = settings.non_selected_header;
            selHeader.innerText = settings.selected_header;

            wrapper.non_selected.appendChild(nonHeader);
            wrapper.selected.appendChild(selHeader);
        }

        var searchTerm = wrapper.search ? wrapper.search.value.toLowerCase() : null;
        var currentGroup = null;
        var groupWrapper = null;

        for (var i = 0; i < select.options.length; i++) {
            var option = select.options[i];
            var value = option.value;
            var label = option.textContent || option.innerText;

            var a = document.createElement("a");
            a.tabIndex = 0;
            a.className = "item";
            a.innerText = label;
            a.setAttribute("role", "button");
            a.setAttribute("data-value", value);
            a.setAttribute("multi-index", i);

            if (option.disabled) a.className += " disabled";
            if (option.selected) {
                a.className += " selected";
                var clone = a.cloneNode(true);
                wrapper.selected.appendChild(clone);
            }

            if (option.parentNode.nodeName === "OPTGROUP" && option.parentNode !== currentGroup) {
                currentGroup = option.parentNode;
                groupWrapper = document.createElement("div");
                groupWrapper.className = "item-group";

                if (currentGroup.label) {
                    var groupLabel = document.createElement("span");
                    groupLabel.innerHTML = currentGroup.label;
                    groupLabel.className = "group-label";
                    groupWrapper.appendChild(groupLabel);
                }

                wrapper.non_selected.appendChild(groupWrapper);
            }

            if (option.parentNode === select) {
                groupWrapper = null;
                currentGroup = null;
            }

            if (!searchTerm || (searchTerm && label.toLowerCase().indexOf(searchTerm) > -1)) {
                if (groupWrapper != null) {
                    groupWrapper.appendChild(a);
                } else {
                    wrapper.non_selected.appendChild(a);
                }
            }
        }

        if (settings.hide_empty_groups) {
            var groups = document.getElementsByClassName("item-group");
            for (i = 0; i < groups.length; i++) {
                if (groups[i].childElementCount < 2) {
                    groups[i].style.display = "none";
                }
            }
        }
    };

    return function (select, settings) {
        settings = settings !== undefined ? settings : {};
        settings.enable_search = settings.enable_search !== false;
        settings.search_placeholder = settings.search_placeholder !== undefined ? settings.search_placeholder : "Search...";
        settings.non_selected_header = settings.non_selected_header !== undefined ? settings.non_selected_header : null;
        settings.selected_header = settings.selected_header !== undefined ? settings.selected_header : null;
        settings.limit = settings.limit !== undefined ? parseInt(settings.limit) : -1;
        if (isNaN(settings.limit)) settings.limit = -1;
        settings.hide_empty_groups = settings.hide_empty_groups === true;

        if (select.dataset.multijs != null || select.nodeName !== "SELECT" || !select.multiple) return;

        select.style.display = "none";
        select.setAttribute("data-multijs", true);

        var wrapper = document.createElement("div");
        wrapper.className = "multi-wrapper";

        if (settings.enable_search) {
            var input = document.createElement("input");
            input.className = "search-input";
            input.type = "text";
            input.setAttribute("placeholder", settings.search_placeholder);
            input.setAttribute("title", settings.search_placeholder);
            input.addEventListener("input", function () {
                render(select, settings);
            });

            wrapper.appendChild(input);
            wrapper.search = input;
        }

        var nonSelected = document.createElement("div");
        nonSelected.className = "non-selected-wrapper";

        var selected = document.createElement("div");
        selected.className = "selected-wrapper";

        wrapper.addEventListener("click", function (e) {
            if (e.target.getAttribute("multi-index")) {
                toggleOption(select, e, settings);
            }
        });

        wrapper.addEventListener("keypress", function (e) {
            var isActionKey = e.keyCode === 32 || e.keyCode === 13;
            if (e.target.getAttribute("multi-index") && isActionKey) {
                e.preventDefault();
                toggleOption(select, e, settings);
            }
        });

        wrapper.appendChild(nonSelected);
        wrapper.appendChild(selected);

        wrapper.non_selected = nonSelected;
        wrapper.selected = selected;

        select.wrapper = wrapper;
        select.parentNode.insertBefore(wrapper, select.nextSibling);

        for (var i = 0; i < select.options.length; i++) {
            var option = select.options[i];
            option.setAttribute("data-origin-disabled", option.disabled);
        }

        enforceLimit(select, settings);
        render(select, settings);

        select.addEventListener("change", function () {
            render(select, settings);
        });
    };
})();

// jQuery 지원
if (typeof jQuery !== "undefined") {
    (function ($) {
        $.fn.multi = function (options) {
            options = options !== undefined ? options : {};
            return this.each(function () {
                var select = $(this);
                multi(select.get(0), options);
            });
        };
    })(jQuery);
}
